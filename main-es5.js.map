{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/@core/components/background/background.component.ts","webpack:///src/app/@core/components/background/background.component.html","webpack:///src/app/@core/components/background/index.ts","webpack:///src/app/@core/components/gameover/gameover.modal.ts","webpack:///src/app/@core/components/gameover/gameover.modal.html","webpack:///src/app/@core/components/gameover/gameover.module.ts","webpack:///src/app/@core/components/gameover/index.ts","webpack:///src/app/@core/components/index.ts","webpack:///src/app/@core/components/leveling/index.ts","webpack:///src/app/@core/components/leveling/leveling.component.ts","webpack:///src/app/@core/components/leveling/leveling.component.html","webpack:///src/app/@core/components/scoring/index.ts","webpack:///src/app/@core/components/scoring/scoring.component.ts","webpack:///src/app/@core/components/scoring/scoring.component.html","webpack:///src/app/@core/components/splash/index.ts","webpack:///src/app/@core/components/splash/splash.component.ts","webpack:///src/app/@core/components/splash/splash.component.html","webpack:///src/app/@core/constants/constants.ts","webpack:///src/app/@core/constants/game.config.ts","webpack:///src/app/@core/constants/index.ts","webpack:///src/app/@core/controls/ai/ai-follow-shooter.control.ts","webpack:///src/app/@core/controls/ai/ai-follow.control.ts","webpack:///src/app/@core/controls/ai/ai-random-shooter.control.ts","webpack:///src/app/@core/controls/ai/ai-random.control.ts","webpack:///src/app/@core/controls/ai/ai.control.ts","webpack:///src/app/@core/controls/ai/index.ts","webpack:///src/app/@core/controls/control.ts","webpack:///src/app/@core/controls/index.ts","webpack:///src/app/@core/controls/player/index.ts","webpack:///src/app/@core/controls/player/player.control.ts","webpack:///src/app/@core/models/background.ts","webpack:///src/app/@core/models/controlled-graphics.ts","webpack:///src/app/@core/models/dynamic-graphics.ts","webpack:///src/app/@core/models/explosion.ts","webpack:///src/app/@core/models/index.ts","webpack:///src/app/@core/models/projectile.ts","webpack:///src/app/@core/models/ship.ts","webpack:///src/app/@core/services/graphics-factory/graphics-factory.ts","webpack:///src/app/@core/services/graphics-factory/index.ts","webpack:///src/app/@core/services/index.ts","webpack:///src/app/@core/services/loader/index.ts","webpack:///src/app/@core/services/loader/loader.ts","webpack:///src/app/@core/services/orchestrator/index.ts","webpack:///src/app/@core/services/orchestrator/orchestrator.ts","webpack:///src/app/@core/services/score/index.ts","webpack:///src/app/@core/services/score/score.ts","webpack:///src/app/@core/utils/control.map.ts","webpack:///src/app/@core/utils/index.ts","webpack:///src/app/@core/utils/random.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/game/game.module.ts","webpack:///src/app/game/game.routes.ts","webpack:///src/app/game/index.ts","webpack:///src/app/game/route.guard.ts","webpack:///src/app/menu/index.ts","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/menu/menu.module.ts","webpack:///src/app/menu/menu.routes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","BackgroundComponent","circles","Array","fill","selector","templateUrl","styleUrls","GameoverModal","activeModal","isHighest","GameoverModule","imports","declarations","providers","LevelingComponent","_level","_levelUp","value","levelUp","setTimeout","opacity","display","animations","ScoringComponent","score","SplashComponent","GAME_WIDTH","GAME_HEIGHT","SCORE_STORAGE_PATH","EventType","GAME_CONFIG","timeout","type","ADD_RANDOM_KAMIKAZE_SHIP","ADD_RANDOM_SHOOTER_SHIP","ADD_FOLLOW_KAMIKAZE_SHIP","ADD_FOLLOW_SHOOTER_SHIP","AiFollowShooterControls","target","aimList","seed","lastAngle","cooldownEnds","aim","parent","position","delta","now","Date","shouldGetNewAim","getNewAim","Math","abs","rotation","shoot","x","y","move","array","filter","child","length","random","nextInt","AiFollowControls","AiRandomShooterControls","AiRandomControls","AiControl","dist","sqrt","pow","Control","ControlFactory","klass","args","PlayerControls","_onClick","document","addEventListener","mouse","removeEventListener","BackgroundLayer","texture","coefficient","set","tilePosition","Background","textures","addChild","map","i","next","children","forEach","update","ControlledGraphics","factory","graphics","options","control","onRemove","Set","tint","scale","cleanup","values","cb","explosion","getExplosion","onComplete","removeChild","getProjectile","step","cos","speed","sin","targetRotation","atan2","angle","prefix","min","angularSpeed","PI","DynamicGraphics","hash","toString","substring","other","boundingRadius","Explosion","loop","anchor","play","Projectile","owner","blendmode","ADD","points","history","rope","rotationAngle","pop","unshift","point","ix","cubicInterpolation","iy","k","arr","factor","clipInput","t","tangentFactor","floor","m","getTangent","p","t2","t3","Ship","GraphicsFactory","loader","activatedRoute","snapshot","params","background","get","call","level","candidates","enemy","add","getAnimation","Loader","baseUrl","isCompleted","callbacks","load","completed","loading","resource","resources","Object","data","frames","sort","frame","from","push","callCallbacks","Orchestrator","triggerTime","iteration","enemies","container","hasNext","advanceToNewLevel","event","getEvent","getEnemy","Score","_score","_isHighest","frozen","scores","JSON","parse","localStorage","getItem","highestScore","setItem","stringify","ControlMap","key","has","Map","Random","_seed","routes","path","loadChildren","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","isLoading","whenCompleted","AppModule","bootstrap","GameComponent","orchestrator","modalService","router","clock","sortableChildren","renderer","backgroundColor","width","height","view","canvas","nativeElement","initialize","destroy","player","getPlayer","getBackground","gameover","start","plugins","interaction","global","removeSet","entries","child01","isOutOfBounds","j","child02","hitTest","render","freeze","modalRef","open","size","centered","backdrop","keyboard","componentInstance","result","navigate","read","GameModule","component","runGuardsAndResolvers","canActivate","GameRoutes","forChild","RouteParamGuard","MenuComponent","MenuModule","MenuRoutes","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'background-component',\r\n  templateUrl: './background.component.html',\r\n  styleUrls: ['./background.component.scss'],\r\n})\r\nexport class BackgroundComponent {\r\n  public readonly circles = Array(10).fill('');\r\n}\r\n","<div class=\"background\">\r\n  <ul class=\"circles\">\r\n    <li *ngFor=\"let circle of circles\"></li>\r\n  </ul>\r\n</div>\r\n","export * from './background.component';\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'gameover-modal',\r\n  templateUrl: './gameover.modal.html',\r\n  styleUrls: ['./gameover.modal.scss'],\r\n})\r\nexport class GameoverModal {\r\n  @Input()\r\n  public readonly isHighest: boolean = false;\r\n\r\n  @Input()\r\n  public readonly score: number;\r\n\r\n  constructor(public readonly activeModal: NgbActiveModal) {}\r\n}\r\n","\r\n<div class=\"gameover modal-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <h1>Game Over</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-2 text-center\">\r\n        <strong>Score:</strong>\r\n      </div>\r\n      <div class=\"col-2 text-center\">\r\n        {{score}}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row justify-content-center\" *ngIf=\"isHighest\">\r\n      <div class=\"col-12 text-center\">\r\n        <strong>Highest Score!</strong>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"activeModal.close()\">Main Menu</button>\r\n      </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameoverModal } from './gameover.modal';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [GameoverModal],\r\n  providers: [],\r\n  exports: [],\r\n})\r\nexport class GameoverModule {}\r\n","export * from './gameover.modal';\r\n","export * from './background';\r\nexport * from './leveling';\r\nexport * from './scoring';\r\nexport * from './splash';\r\nexport * from './gameover';\r\n","export * from './leveling.component';\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'leveling-component',\r\n  templateUrl: './leveling.component.html',\r\n  styleUrls: ['./leveling.component.scss'],\r\n  animations: [\r\n    trigger('levelUp', [\r\n      state('true', style({ opacity: 1, display: 'flex' })),\r\n      state('false', style({ opacity: 0, display: 'none' })),\r\n      transition('0 <=> 1', [\r\n        style({ display: 'flex' }),\r\n        animate('500ms ease'),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class LevelingComponent {\r\n  @Input('level')\r\n  public set level(value: number) {\r\n    if (this._level !== value) this.levelUp = true;\r\n    this._level = value;\r\n  }\r\n  public get level(): number {\r\n    return this._level;\r\n  }\r\n  private _level: number = 1;\r\n\r\n  @HostBinding('@levelUp')\r\n  private set levelUp(value: boolean) {\r\n    this._levelUp = value;\r\n    if (value) setTimeout(() => (this.levelUp = false), 1000);\r\n  }\r\n  private get levelUp(): boolean {\r\n    return this._levelUp;\r\n  }\r\n  private _levelUp: boolean = false;\r\n}\r\n","<div class=\"level-container\">\r\n    <strong>Level {{level}} reached</strong>\r\n    <small>AI evolved</small>\r\n</div>\r\n\r\n","export * from './scoring.component';\r\n","import { Component } from '@angular/core';\r\nimport { Score } from 'src/app/@core/services';\r\n\r\n@Component({\r\n  selector: 'scoring-component',\r\n  templateUrl: './scoring.component.html',\r\n  styleUrls: ['./scoring.component.scss'],\r\n})\r\nexport class ScoringComponent {\r\n  public constructor(public readonly score: Score) {}\r\n}\r\n","<div class=\"score\">Score: {{this.score.score}}|{{this.score.highestScore}}|{{this.score.isHighest}}</div>","export * from './splash.component';\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'splash-component',\r\n  templateUrl: './splash.component.html',\r\n  styleUrls: ['./splash.component.scss'],\r\n  animations: [\r\n    trigger('isLoading', [\r\n      state('true', style({ opacity: 1, display: 'flex' })),\r\n      state('false', style({ opacity: 0, display: 'none' })),\r\n      transition('0 <=> 1', [\r\n        style({ display: 'flex' }),\r\n        animate('200ms ease'),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class SplashComponent {\r\n  @Input()\r\n  @HostBinding('@isLoading')\r\n  public isLoading: boolean;\r\n}\r\n","<!-- MUTLI SPINNER -->\r\n<div class=\"multi-spinner-container\">\r\n  <div class=\"multi-spinner\">\r\n    <div class=\"multi-spinner\">\r\n      <div class=\"multi-spinner\">\r\n        <div class=\"multi-spinner\">\r\n          <div class=\"multi-spinner\">\r\n            <div class=\"multi-spinner\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<strong>Loading ...</strong>\r\n","export const GAME_WIDTH = 800;\r\nexport const GAME_HEIGHT = 600;\r\nexport const SCORE_STORAGE_PATH = 'SCOREING';\r\n","export enum EventType {\r\n  ADD_RANDOM_KAMIKAZE_SHIP = 'ADD_RANDOM_KAMIKAZE_SHIP',\r\n  ADD_RANDOM_SHOOTER_SHIP = 'ADD_RANDOM_SHOOTER_SHIP',\r\n  ADD_FOLLOW_KAMIKAZE_SHIP = 'ADD_FOLLOW_KAMIKAZE_SHIP',\r\n  ADD_FOLLOW_SHOOTER_SHIP = 'ADD_FOLLOW_SHOOTER_SHIP',\r\n}\r\n\r\nexport const GAME_CONFIG: Array<Array<{ timeout: number; type: EventType }>> = [\r\n  [\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_RANDOM_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_RANDOM_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_KAMIKAZE_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_RANDOM_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_FOLLOW_KAMIKAZE_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_KAMIKAZE_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 3000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_RANDOM_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_KAMIKAZE_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 2000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 1500, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1500, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1500, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1500, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1500, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n  ],\r\n  [\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n    { timeout: 1000, type: EventType.ADD_FOLLOW_SHOOTER_SHIP },\r\n  ],\r\n];\r\n","export * from './constants';\r\nexport * from './game.config';\r\n","import { Container } from '@pixi/display';\r\nimport { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from 'src/app/@core/models/controlled-graphics';\r\nimport { AiControl } from './ai.control';\r\n\r\nexport class AiFollowShooterControls extends AiControl {\r\n  private lastAngle: number = 0;\r\n  private cooldownEnds: number = 0;\r\n\r\n  public constructor(\r\n    public readonly target: ControlledGraphics<any>,\r\n    public readonly aimList: Array<ControlledGraphics<any>>,\r\n    public seed: number\r\n  ) {\r\n    super(seed);\r\n    this.aim = { parent: null, position: target.position };\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    const now = Date.now();\r\n    if (this.shouldGetNewAim(this.aim)) {\r\n      this.aim = this.getNewAim();\r\n    }\r\n    if (this.aim.parent) {\r\n      if (\r\n        Math.abs(this.lastAngle - this.target.rotation) < 0.01 &&\r\n        now > this.cooldownEnds\r\n      ) {\r\n        this.target.shoot();\r\n        this.cooldownEnds = now + 1000;\r\n      }\r\n      this.lastAngle = this.target.rotation;\r\n    }\r\n    const { x, y } = this.aim.position;\r\n    this.target.move(delta, { x, y } as IPoint);\r\n  }\r\n\r\n  protected getNewAim(): {\r\n    parent: Container;\r\n    position: { x: number; y: number };\r\n  } {\r\n    const array = this.aimList.filter(\r\n      (child) => !!child.parent && child !== this.target\r\n    );\r\n    if (array.length === 0) return super.getNewAim();\r\n    return array[this.random.nextInt() % array.length];\r\n  }\r\n}\r\n","import { Container } from '@pixi/display';\r\nimport { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from 'src/app/@core/models/controlled-graphics';\r\nimport { AiControl } from './ai.control';\r\n\r\nexport class AiFollowControls extends AiControl {\r\n  public constructor(\r\n    public readonly target: ControlledGraphics<any>,\r\n    public readonly aimList: Array<ControlledGraphics<any>>,\r\n    public seed: number\r\n  ) {\r\n    super(seed);\r\n    this.aim = { parent: null, position: target.position };\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    if (this.shouldGetNewAim(this.aim)) {\r\n      this.aim = this.getNewAim();\r\n    }\r\n    const { x, y } = this.aim.position;\r\n    this.target.move(delta, { x, y } as IPoint);\r\n  }\r\n\r\n  public cleanup(): void {\r\n    /** @empty */\r\n  }\r\n\r\n  protected getNewAim(): {\r\n    parent: Container;\r\n    position: { x: number; y: number };\r\n  } {\r\n    const array = this.aimList.filter(\r\n      (child) => !!child.parent && child !== this.target\r\n    );\r\n    if (array.length === 0) return super.getNewAim();\r\n    return array[this.random.nextInt() % array.length];\r\n  }\r\n}\r\n","import { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from 'src/app/@core/models/controlled-graphics';\r\nimport { AiControl } from './ai.control';\r\n\r\nexport class AiRandomShooterControls extends AiControl {\r\n  private lastAngle: number = 0;\r\n\r\n  private cooldownEnds: number = 0;\r\n\r\n  public constructor(\r\n    public readonly target: ControlledGraphics<any>,\r\n    public seed: number\r\n  ) {\r\n    super(seed);\r\n    this.aim = this.getNewAim();\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    const now = Date.now();\r\n    if (this.shouldGetNewAim(this.aim)) {\r\n      this.aim = this.getNewAim();\r\n    }\r\n    if (\r\n      Math.abs(this.lastAngle - this.target.rotation) < 0.01 &&\r\n      now > this.cooldownEnds\r\n    ) {\r\n      this.target.shoot();\r\n      this.cooldownEnds = now + 1000;\r\n    }\r\n    this.lastAngle = this.target.rotation;\r\n    const { x, y } = this.aim.position;\r\n    this.target.move(delta, { x, y } as IPoint);\r\n  }\r\n}\r\n","import { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from 'src/app/@core/models/controlled-graphics';\r\nimport { AiControl } from './ai.control';\r\n\r\nexport class AiRandomControls extends AiControl {\r\n  public constructor(\r\n    public readonly target: ControlledGraphics<any>,\r\n    public seed: number\r\n  ) {\r\n    super(seed);\r\n    this.aim = this.getNewAim();\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    if (this.shouldGetNewAim(this.aim)) {\r\n      this.aim = this.getNewAim();\r\n    }\r\n    const { x, y } = this.aim.position;\r\n    this.target.move(delta, { x, y } as IPoint);\r\n  }\r\n}\r\n","import { Container } from '@pixi/display';\r\nimport { GAME_HEIGHT, GAME_WIDTH } from 'src/app/@core/constants';\r\nimport { Random } from 'src/app/@core/utils';\r\nimport { Control } from '../control';\r\n\r\nexport interface Aim {\r\n  parent: Container;\r\n  position: { x: number; y: number };\r\n}\r\n\r\nexport abstract class AiControl extends Control {\r\n  public readonly random: Random;\r\n\r\n  protected aim: Aim;\r\n\r\n  public constructor(public readonly seed: number) {\r\n    super();\r\n    this.random = new Random(this.seed);\r\n  }\r\n\r\n  public cleanup(): void {\r\n    /** @empty */\r\n  }\r\n\r\n  protected shouldGetNewAim(aim: Aim): boolean {\r\n    const dist = Math.sqrt(\r\n      Math.pow(this.target.position.x - aim.position.x, 2) +\r\n        Math.pow(this.target.position.y - aim.position.y, 2)\r\n    );\r\n    return dist < 5;\r\n  }\r\n\r\n  protected getNewAim(): Aim {\r\n    return {\r\n      parent: null,\r\n      position: {\r\n        x: this.random.nextInt() % GAME_WIDTH,\r\n        y: this.random.nextInt() % GAME_HEIGHT,\r\n      },\r\n    };\r\n  }\r\n}\r\n","export * from './ai.control';\r\nexport * from './ai-follow.control';\r\nexport * from './ai-follow-shooter.control';\r\nexport * from './ai-random.control';\r\nexport * from './ai-random-shooter.control';\r\n","import { DisplayObject } from '@pixi/display';\r\nimport { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from '../models/controlled-graphics';\r\n\r\nexport abstract class Control {\r\n  public abstract readonly target: DisplayObject;\r\n\r\n  public abstract update(delta: number, mouse: IPoint): void;\r\n\r\n  public abstract cleanup(): void;\r\n}\r\n\r\nexport interface Class<T> {\r\n  new (...args: any[]): T;\r\n}\r\n\r\nexport function ControlFactory<T extends Control>(\r\n  klass: Class<T>,\r\n  ...args: any[]\r\n): (target: ControlledGraphics<T>) => T {\r\n  return (target) => new klass(target, ...args);\r\n}\r\n","export * from './player';\r\nexport * from './control';\r\nexport * from './ai';\r\n","export * from './player.control';\r\n","import { IPoint } from '@pixi/math';\r\nimport { ControlledGraphics } from 'src/app/@core/models/controlled-graphics';\r\nimport { Control } from '../control';\r\n\r\nexport class PlayerControls extends Control {\r\n  public constructor(\r\n    public readonly target: ControlledGraphics<PlayerControls>\r\n  ) {\r\n    super();\r\n    document.addEventListener('click', this._onClick);\r\n  }\r\n\r\n  private _onClick = () => this.target.shoot();\r\n\r\n  public update(delta: number, mouse: IPoint): void {\r\n    this.target.move(delta, mouse);\r\n  }\r\n\r\n  public cleanup(): void {\r\n    document.removeEventListener('click', this._onClick);\r\n  }\r\n}\r\n","import { Texture } from '@pixi/core';\r\nimport { Container } from '@pixi/display';\r\nimport { TilingSprite } from '@pixi/sprite-tiling';\r\nimport { GAME_HEIGHT, GAME_WIDTH } from '../constants';\r\nimport { Random } from '../utils';\r\n\r\nclass BackgroundLayer extends TilingSprite {\r\n  constructor(texture: Texture, private readonly coefficient: number) {\r\n    super(texture, GAME_WIDTH, GAME_HEIGHT);\r\n    this.position.set(0, 0);\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    this.tilePosition.x -= delta * this.coefficient;\r\n  }\r\n}\r\n\r\nexport class Background extends Container {\r\n  private readonly random: Random;\r\n\r\n  public get zIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  public children: Array<BackgroundLayer>;\r\n\r\n  constructor(private readonly seed: number, ...textures: Array<Texture>) {\r\n    super();\r\n    this.random = new Random(this.seed);\r\n    this.addChild(\r\n      ...textures.map((texture, i) => {\r\n        const child = new BackgroundLayer(texture, 0.5 * (i + 1));\r\n        child.tilePosition.set(\r\n          this.random.next() * GAME_WIDTH,\r\n          this.random.next() * GAME_HEIGHT\r\n        );\r\n        return child;\r\n      })\r\n    );\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    this.children.forEach((child) => child.update(delta));\r\n  }\r\n}\r\n","import { IPoint, Point } from '@pixi/math';\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { Control } from '../controls';\r\nimport { GraphicsFactory } from '../services/graphics-factory';\r\nimport { DynamicGraphics, DynamicOptions } from './dynamic-graphics';\r\n\r\nexport interface ControlledOptions extends DynamicOptions {\r\n  speed: number;\r\n  angularSpeed: number;\r\n  tint?: number;\r\n  scale: number;\r\n}\r\n\r\nexport class ControlledGraphics<T extends Control> extends DynamicGraphics {\r\n  public onRemove: Set<() => void> = new Set();\r\n\r\n  public get zIndex(): number {\r\n    return 2;\r\n  }\r\n\r\n  private readonly control: T;\r\n\r\n  constructor(\r\n    private readonly factory: GraphicsFactory,\r\n    private readonly graphics: Sprite,\r\n    public readonly options: ControlledOptions,\r\n    control: (target) => T\r\n  ) {\r\n    super();\r\n    this.addChild(this.graphics);\r\n    this.control = control(this);\r\n    if (options.tint) this.graphics.tint = this.options.tint;\r\n    this.graphics.scale.set(this.graphics.scale.x * this.options.scale);\r\n  }\r\n\r\n  public update(delta: number, mouse: IPoint): void {\r\n    this.control.update(delta, mouse);\r\n  }\r\n\r\n  public cleanup(): void {\r\n    const {\r\n      parent,\r\n      position: { x, y },\r\n    } = this;\r\n    if (!parent) return;\r\n    this.control.cleanup();\r\n    for (let cb of this.onRemove.values()) cb();\r\n    const explosion = parent.addChild(this.factory.getExplosion(x, y));\r\n    explosion.onComplete = () => {\r\n      parent.removeChild(explosion);\r\n    };\r\n  }\r\n\r\n  public shoot(): void {\r\n    if (!this.parent) return;\r\n    this.parent.addChild(this.factory.getProjectile(this));\r\n  }\r\n\r\n  public move(delta: number, target: IPoint) {\r\n    const step = new Point(\r\n      Math.cos(this.rotation) * this.options.speed * delta,\r\n      Math.sin(this.rotation) * this.options.speed * delta\r\n    );\r\n    this.position.x += step.x;\r\n    this.position.y += step.y;\r\n    const targetRotation = Math.atan2(\r\n      target.y - this.position.y,\r\n      target.x - this.position.x\r\n    );\r\n\r\n    const angle = Math.atan2(\r\n      Math.sin(targetRotation - this.rotation),\r\n      Math.cos(targetRotation - this.rotation)\r\n    );\r\n    const prefix = angle / Math.abs(angle || 1);\r\n    const rotation =\r\n      prefix * Math.min(Math.abs(angle), this.options.angularSpeed);\r\n\r\n    this.rotation = (this.rotation + rotation) % (Math.PI * 2);\r\n  }\r\n\r\n  public isOutOfBounds(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { Container } from '@pixi/display';\r\nimport { GAME_HEIGHT, GAME_WIDTH } from '../constants';\r\n\r\nexport interface DynamicOptions {\r\n  boundingRadius: number;\r\n}\r\n\r\nexport abstract class DynamicGraphics extends Container {\r\n  public options: DynamicOptions;\r\n\r\n  public constructor(\r\n    public readonly hash: string = Math.random().toString(36).substring(7)\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public isOutOfBounds(): boolean {\r\n    return (\r\n      Math.abs(this.position.x - GAME_WIDTH / 2) > GAME_WIDTH / 2 ||\r\n      Math.abs(this.position.y - GAME_HEIGHT / 2) > GAME_HEIGHT / 2\r\n    );\r\n  }\r\n\r\n  public hitTest(other: DynamicGraphics): boolean {\r\n    if (this.hash === other.hash) return false;\r\n    const dist = Math.sqrt(\r\n      Math.pow(this.position.x - other.position.x, 2) +\r\n        Math.pow(this.position.y - other.position.y, 2)\r\n    );\r\n    return dist < this.options.boundingRadius + other.options.boundingRadius;\r\n  }\r\n\r\n  public cleanup(): void {\r\n    /** @empty */\r\n  }\r\n}\r\n","import { Resource, Texture } from '@pixi/core';\r\nimport { AnimatedSprite } from '@pixi/sprite-animated';\r\n\r\nexport class Explosion extends AnimatedSprite {\r\n  public loop: boolean = false;\r\n\r\n  public get zIndex(): number {\r\n    return 3;\r\n  }\r\n\r\n  public constructor(textures: Array<Texture<Resource>>, x: number, y: number) {\r\n    super(textures);\r\n    this.position.set(x, y);\r\n    this.anchor.set(0.5, 0.5);\r\n    this.rotation = Math.random() * Math.PI;\r\n    this.scale.set(0.75 + Math.random() * 0.5);\r\n    this.play();\r\n  }\r\n}\r\n","export * from './background';\r\nexport * from './ship';\r\nexport * from './explosion';\r\nexport * from './projectile';\r\n","import { BLEND_MODES } from '@pixi/constants';\r\nimport { Texture } from '@pixi/core';\r\nimport { Point } from '@pixi/math';\r\nimport { SimpleRope } from '@pixi/mesh-extras';\r\nimport { GraphicsFactory } from '../services/graphics-factory';\r\nimport { ControlledGraphics } from './controlled-graphics';\r\nimport { DynamicGraphics, DynamicOptions } from './dynamic-graphics';\r\n\r\nexport interface ProjectileOptions extends DynamicOptions {\r\n  speed: number;\r\n}\r\n\r\nexport class Projectile extends DynamicGraphics {\r\n  public readonly blendmode = BLEND_MODES.ADD;\r\n\r\n  public get zIndex(): number {\r\n    return 1;\r\n  }\r\n\r\n  private readonly rope: SimpleRope;\r\n\r\n  private readonly points: Array<Point>;\r\n\r\n  private readonly rotationAngle: number;\r\n\r\n  private history: Array<{ x: number; y: number }>;\r\n\r\n  constructor(\r\n    private readonly factory: GraphicsFactory,\r\n    private readonly owner: ControlledGraphics<any>,\r\n    public readonly options: ProjectileOptions,\r\n    texture: Texture\r\n  ) {\r\n    super(owner.hash);\r\n\r\n    this.points = [...Array(100)].map(\r\n      () => new Point(-owner.position.x, -owner.position.y)\r\n    );\r\n    this.history = new Array(20).fill({\r\n      x: owner.position.x,\r\n      y: owner.position.y,\r\n    });\r\n    this.rope = new SimpleRope(texture, this.points);\r\n    this.position.set(owner.position.x, owner.position.y);\r\n    this.rotationAngle = owner.rotation;\r\n    if (this.owner.options.tint) this.rope.tint = this.owner.options.tint;\r\n    this.addChild(this.rope);\r\n  }\r\n\r\n  public update(delta: number): void {\r\n    const step = new Point(\r\n      Math.cos(this.rotationAngle) * this.options.speed * delta,\r\n      Math.sin(this.rotationAngle) * this.options.speed * delta\r\n    );\r\n\r\n    this.position.x += step.x;\r\n    this.position.y += step.y;\r\n\r\n    const { x, y } = this.position;\r\n    this.history.pop();\r\n    this.history.unshift({ x, y });\r\n    for (let i = 0; i < this.points.length; i++) {\r\n      const point = this.points[i];\r\n\r\n      const ix =\r\n        this.cubicInterpolation(\r\n          this.history.map((point) => point.x),\r\n          (i / this.points.length) * this.history.length\r\n        ) - this.position.x;\r\n      const iy =\r\n        this.cubicInterpolation(\r\n          this.history.map((point) => point.y),\r\n          (i / this.points.length) * this.history.length\r\n        ) - this.position.y;\r\n\r\n      point.x = ix;\r\n      point.y = iy;\r\n    }\r\n  }\r\n\r\n  public cleanup(): void {\r\n    const {\r\n      parent,\r\n      position: { x, y },\r\n    } = this;\r\n    if (!parent) return;\r\n    const explosion = parent.addChild(this.factory.getExplosion(x, y));\r\n    explosion.onComplete = () => {\r\n      parent.removeChild(explosion);\r\n    };\r\n  }\r\n\r\n  private clipInput(k: number, arr: Array<number>): number {\r\n    if (k < 0) k = 0;\r\n    if (k > arr.length - 1) k = arr.length - 1;\r\n    return arr[k];\r\n  }\r\n\r\n  private getTangent(k: number, factor: number, array: Array<number>): number {\r\n    return (\r\n      (factor * (this.clipInput(k + 1, array) - this.clipInput(k - 1, array))) /\r\n      2\r\n    );\r\n  }\r\n\r\n  private cubicInterpolation(\r\n    array: Array<number>,\r\n    t: number,\r\n    tangentFactor: number = 1\r\n  ): number {\r\n    const k = Math.floor(t);\r\n    const m = [\r\n      this.getTangent(k, tangentFactor, array),\r\n      this.getTangent(k + 1, tangentFactor, array),\r\n    ];\r\n    const p = [this.clipInput(k, array), this.clipInput(k + 1, array)];\r\n    t -= k;\r\n    const t2 = t * t;\r\n    const t3 = t * t2;\r\n    return (\r\n      (2 * t3 - 3 * t2 + 1) * p[0] +\r\n      (t3 - 2 * t2 + t) * m[0] +\r\n      (-2 * t3 + 3 * t2) * p[1] +\r\n      (t3 - t2) * m[1]\r\n    );\r\n  }\r\n}\r\n","import { Texture } from '@pixi/core';\r\nimport { Sprite } from '@pixi/sprite';\r\n\r\nexport class Ship extends Sprite {\r\n  public constructor(texture: Texture) {\r\n    super(texture);\r\n    this.anchor.set(0.5, 0.5);\r\n    this.scale.set(0.2);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EventType, GAME_HEIGHT, GAME_WIDTH } from '../../constants';\r\nimport {\r\n  AiFollowControls,\r\n  AiFollowShooterControls,\r\n  AiRandomControls,\r\n  AiRandomShooterControls,\r\n  PlayerControls,\r\n  ControlFactory,\r\n  AiControl,\r\n} from '../../controls';\r\nimport { Background, Explosion, Projectile, Ship } from '../../models';\r\nimport { ControlledGraphics } from '../../models/controlled-graphics';\r\nimport { Random } from '../../utils';\r\nimport { Loader } from '../loader';\r\nimport { Score } from '../score';\r\n\r\n@Injectable()\r\nexport class GraphicsFactory {\r\n  private readonly seed: number;\r\n\r\n  private readonly random: Random;\r\n\r\n  constructor(\r\n    private readonly loader: Loader,\r\n    private readonly score: Score,\r\n    private readonly activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.seed = this.activatedRoute.snapshot.params['seed'];\r\n    this.random = new Random(this.seed);\r\n  }\r\n\r\n  public getBackground(): Background {\r\n    const background = new Background(\r\n      this.random.nextInt(),\r\n      this.loader.get('bg_far'),\r\n      this.loader.get('bg_mid'),\r\n      this.loader.get('bg_near')\r\n    );\r\n    const update = background.update;\r\n    background.update = (delta) =>\r\n      update.call(background, delta * (this.score.level + 1));\r\n    return background;\r\n  }\r\n\r\n  public getPlayer(): ControlledGraphics<PlayerControls> {\r\n    const options = {\r\n      speed: 5,\r\n      angularSpeed: 0.1,\r\n      scale: 1,\r\n      boundingRadius: 20,\r\n    };\r\n    return new ControlledGraphics(\r\n      this,\r\n      new Ship(this.loader.get('ship')),\r\n      options,\r\n      ControlFactory(PlayerControls)\r\n    );\r\n  }\r\n\r\n  public getEnemy(\r\n    type: EventType,\r\n    candidates: Array<ControlledGraphics<any>>\r\n  ): ControlledGraphics<AiControl> {\r\n    let control: (target: any) => AiControl;\r\n    switch (type) {\r\n      case EventType.ADD_RANDOM_SHOOTER_SHIP: {\r\n        control = ControlFactory(\r\n          AiRandomShooterControls,\r\n          this.random.nextInt()\r\n        );\r\n        break;\r\n      }\r\n      case EventType.ADD_FOLLOW_KAMIKAZE_SHIP: {\r\n        control = ControlFactory(\r\n          AiFollowControls,\r\n          candidates,\r\n          this.random.nextInt()\r\n        );\r\n        break;\r\n      }\r\n      case EventType.ADD_FOLLOW_SHOOTER_SHIP: {\r\n        control = ControlFactory(\r\n          AiFollowShooterControls,\r\n          candidates,\r\n          this.random.nextInt()\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        control = ControlFactory(AiRandomControls, this.random.nextInt());\r\n        break;\r\n      }\r\n    }\r\n    const options = {\r\n      speed: 3,\r\n      angularSpeed: 0.05,\r\n      scale: 1,\r\n      boundingRadius: 20,\r\n      tint: this.random.next() * 0xffffff,\r\n    };\r\n\r\n    const enemy = new ControlledGraphics(\r\n      this,\r\n      new Ship(this.loader.get('ship')),\r\n      options,\r\n      control\r\n    );\r\n\r\n    enemy.position.set(\r\n      (GAME_WIDTH * 9) / 8,\r\n      GAME_HEIGHT / 4 + (GAME_HEIGHT / 2) * this.random.next()\r\n    );\r\n    enemy.rotation = Math.PI;\r\n    enemy.onRemove.add(() => this.score.add());\r\n\r\n    return enemy;\r\n  }\r\n\r\n  public getExplosion(x: number, y: number): Explosion {\r\n    return new Explosion(this.loader.getAnimation('explosion'), x, y);\r\n  }\r\n\r\n  public getProjectile(owner: ControlledGraphics<any>): Projectile {\r\n    const options = {\r\n      speed: 15,\r\n      boundingRadius: 10,\r\n    };\r\n    return new Projectile(this, owner, options, this.loader.get('trail'));\r\n  }\r\n}\r\n","export * from './graphics-factory';\r\n","export * from './score';\r\nexport * from './orchestrator';\r\nexport * from './loader';\r\n","export * from './loader';\r\n","import { Loader as AssetLoader, Texture } from 'pixi.js';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Loader extends AssetLoader {\r\n  public readonly baseUrl = 'assets/sprites';\r\n\r\n  private isCompleted: boolean = false;\r\n\r\n  private callbacks: Array<Function> = [];\r\n\r\n  public constructor() {\r\n    super();\r\n    this.add('bg_far', 'city.png');\r\n    this.add('bg_mid', 'cloud_02.png');\r\n    this.add('bg_near', 'cloud.png');\r\n    this.add('ship', 'ship.png');\r\n    this.add('trail', 'trail.png');\r\n    this.add('explosion', 'mc.json');\r\n    this.load();\r\n\r\n    this.onComplete.add(() => this.completed());\r\n  }\r\n\r\n  public get(hash: string): Texture {\r\n    if (this.loading)\r\n      throw new Error(\r\n        `Loader did not finish when the following resource was requested ${hash}`\r\n      );\r\n    const resource: { texture: Texture } = this.resources[hash] as any;\r\n    return resource.texture;\r\n  }\r\n\r\n  public getAnimation(hash: string): Array<Texture> {\r\n    if (this.loading)\r\n      throw new Error(\r\n        `Loader did not finish when the following resource was requested ${hash}`\r\n      );\r\n    return Object.keys(this.resources[hash].data.frames)\r\n      .sort()\r\n      .map((frame) => Texture.from(frame));\r\n  }\r\n\r\n  public whenCompleted(cb: Function) {\r\n    this.callbacks.push(cb);\r\n    if (this.isCompleted) this.callCallbacks();\r\n  }\r\n\r\n  private callCallbacks() {\r\n    this.callbacks.forEach((cb) => cb());\r\n    this.callbacks = [];\r\n  }\r\n\r\n  private completed() {\r\n    this.isCompleted = true;\r\n    this.callCallbacks();\r\n  }\r\n}\r\n","export * from './orchestrator';\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GameComponent } from 'src/app/game/game.component';\r\nimport { EventType, GAME_CONFIG } from 'src/app/@core/constants';\r\nimport { Loader } from 'src/app/@core/services/loader';\r\nimport { Score } from 'src/app/@core/services/score';\r\nimport { Random } from 'src/app/@core/utils';\r\nimport { GraphicsFactory } from '../graphics-factory';\r\nimport { ControlledGraphics } from '../../models/controlled-graphics';\r\n\r\n@Injectable()\r\nexport class Orchestrator {\r\n  public readonly seed: number;\r\n\r\n  public readonly random: Random;\r\n\r\n  private triggerTime: number = Date.now() + 2000;\r\n\r\n  private iteration: number = 0;\r\n\r\n  private enemies: Array<ControlledGraphics<any>> = [];\r\n\r\n  constructor(\r\n    private readonly score: Score,\r\n    private readonly loader: Loader,\r\n    private readonly factory: GraphicsFactory,\r\n    private readonly activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.seed = this.activatedRoute.snapshot.params['seed'];\r\n    this.random = new Random(this.seed);\r\n  }\r\n\r\n  public update(container: GameComponent) {\r\n    const hasNext = this.hasNext();\r\n    this.enemies = this.enemies.filter((enemy) => enemy.parent);\r\n    if (!this.enemies.length && !hasNext) this.advanceToNewLevel();\r\n    if (Date.now() < this.triggerTime || !hasNext) return;\r\n    const event = this.getEvent();\r\n    const candidates = container.children.filter(\r\n      (child) => child instanceof ControlledGraphics\r\n    ) as Array<ControlledGraphics<any>>;\r\n    const enemy = container.addChild(\r\n      this.factory.getEnemy(event.type, candidates)\r\n    );\r\n    this.enemies.push(enemy);\r\n    this.iteration++;\r\n    const next = this.getEvent();\r\n    this.triggerTime = Date.now() + next.timeout;\r\n  }\r\n\r\n  private advanceToNewLevel(): void {\r\n    this.score.level++;\r\n    this.iteration = 0;\r\n    this.enemies = [];\r\n    const event = this.getEvent();\r\n    this.triggerTime = Date.now() + event.timeout;\r\n  }\r\n\r\n  private hasNext(): boolean {\r\n    const level = Math.min(this.score.level, GAME_CONFIG.length - 1);\r\n\r\n    return this.iteration <= GAME_CONFIG[level].length - 1;\r\n  }\r\n\r\n  private getEvent(): { timeout: number; type: EventType } {\r\n    const level = Math.min(this.score.level, GAME_CONFIG.length - 1);\r\n    const iteration = Math.min(this.iteration, GAME_CONFIG[level].length - 1);\r\n    return GAME_CONFIG[level][iteration];\r\n  }\r\n}\r\n","export * from './score';\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SCORE_STORAGE_PATH } from 'src/app/@core/constants';\r\n\r\n@Injectable()\r\nexport class Score {\r\n  public readonly seed: number;\r\n\r\n  public set level(value: number) {\r\n    if (this.frozen) return;\r\n    this._level = value;\r\n  }\r\n\r\n  public get level(): number {\r\n    return this._level;\r\n  }\r\n\r\n  public get isHighest(): boolean {\r\n    return this._isHighest;\r\n  }\r\n\r\n  public get score(): number {\r\n    return this._score;\r\n  }\r\n\r\n  public get highestScore(): number {\r\n    const scores = JSON.parse(localStorage.getItem(SCORE_STORAGE_PATH) || '{}');\r\n    return scores[this.seed] || 0;\r\n  }\r\n\r\n  private _score: number = 0;\r\n\r\n  private _isHighest: boolean = false;\r\n\r\n  private _level: number = 0;\r\n\r\n  private frozen: boolean = false;\r\n\r\n  constructor(private readonly activatedRoute: ActivatedRoute) {\r\n    this.seed = this.activatedRoute.snapshot.params['seed'];\r\n  }\r\n\r\n  public add(): void {\r\n    if (this.frozen) return;\r\n    this._score += 1;\r\n    if (this.highestScore <= this._score) {\r\n      this._isHighest = true;\r\n      const scores = JSON.parse(\r\n        localStorage.getItem(SCORE_STORAGE_PATH) || '{}'\r\n      );\r\n      scores[this.seed] = this._score;\r\n      localStorage.setItem(SCORE_STORAGE_PATH, JSON.stringify(scores));\r\n    }\r\n  }\r\n\r\n  public freeze(): void {\r\n    this.frozen = true;\r\n  }\r\n}\r\n","import { DisplayObject } from '@pixi/display';\r\nimport { Control } from '../controls';\r\n\r\nexport class ControlMap extends Map<DisplayObject, Control> {\r\n  public set(control): this {\r\n    return super.set(control.target, control);\r\n  }\r\n\r\n  public delete(key: DisplayObject): boolean {\r\n    if (this.has(key)) this.get(key).cleanup();\r\n    return super.delete(key);\r\n  }\r\n}\r\n","export * from './random';\r\nexport * from './control.map';\r\n","export class Random {\r\n  private _seed: number;\r\n\r\n  constructor(public readonly seed: number) {\r\n    this._seed = seed % 2147483647;\r\n    if (this._seed) this._seed += 2147483646;\r\n  }\r\n\r\n  public nextInt() {\r\n    return (this._seed = (this._seed * 16807) % 2147483647);\r\n  }\r\n\r\n  public next(): number {\r\n    return (this.nextInt() - 1) / 2147483646;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GameModule } from './game';\r\nimport { MenuModule } from './menu';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'menu',\r\n\r\n    loadChildren: () => MenuModule,\r\n  },\r\n  {\r\n    path: 'game',\r\n    loadChildren: () => GameModule,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'menu',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'menu',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Loader } from './@core/services';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  public isLoading: boolean = true;\r\n\r\n  constructor(private readonly loader: Loader) {\r\n    this.loader.whenCompleted(() =>\r\n      setTimeout(() => {\r\n        this.isLoading = false;\r\n      }, 2000)\r\n    );\r\n  }\r\n}\r\n","<splash-component [isLoading]=\"isLoading\"></splash-component>\r\n<div class=\"container-fluid\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<background-component></background-component>","import { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BackgroundComponent, SplashComponent } from './@core/components';\r\nimport { Loader } from './@core/services';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, BackgroundComponent, SplashComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    RouterModule,\r\n  ],\r\n  providers: [Loader],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import {\r\n  Container,\r\n  autoDetectRenderer,\r\n  Renderer,\r\n  Ticker,\r\n  DisplayObject,\r\n  IPoint,\r\n} from 'pixi.js';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { GAME_HEIGHT, GAME_WIDTH } from 'src/app/@core/constants';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Random } from 'src/app/@core/utils';\r\nimport { PlayerControls } from 'src/app/@core/controls';\r\nimport { Orchestrator, Score, Loader } from 'src/app/@core/services';\r\nimport { GraphicsFactory } from '../@core/services/graphics-factory';\r\nimport { ControlledGraphics } from '../@core/models/controlled-graphics';\r\nimport { DynamicGraphics } from '../@core/models/dynamic-graphics';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GameoverModal } from '../@core/components';\r\n\r\n@Component({\r\n  selector: 'game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss'],\r\n  providers: [Orchestrator, Score, GraphicsFactory],\r\n})\r\nexport class GameComponent extends Container implements OnInit, OnDestroy {\r\n  @ViewChild('canvas', { read: ElementRef, static: true })\r\n  public readonly canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  public readonly clock = new Ticker();\r\n\r\n  public readonly seed: number;\r\n\r\n  public readonly random: Random;\r\n\r\n  public readonly sortableChildren: boolean = true;\r\n\r\n  public renderer: Renderer;\r\n\r\n  public player: ControlledGraphics<PlayerControls>;\r\n\r\n  constructor(\r\n    public readonly score: Score,\r\n    private readonly loader: Loader,\r\n    private readonly orchestrator: Orchestrator,\r\n    private readonly factory: GraphicsFactory,\r\n    private readonly modalService: NgbModal,\r\n    private readonly activatedRoute: ActivatedRoute,\r\n    private readonly router: Router\r\n  ) {\r\n    super();\r\n    this.seed = this.activatedRoute.snapshot.params['seed'];\r\n    this.random = new Random(this.seed);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.renderer = autoDetectRenderer({\r\n      backgroundColor: 0x1099bb,\r\n      width: GAME_WIDTH,\r\n      height: GAME_HEIGHT,\r\n      view: this.canvas.nativeElement,\r\n    }) as Renderer;\r\n\r\n    this.loader.whenCompleted(() => this.initialize());\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.children\r\n      .filter((child) => child instanceof DynamicGraphics)\r\n      .forEach((child: DynamicGraphics) => child.cleanup());\r\n    this.clock.destroy();\r\n  }\r\n\r\n  public initialize(): void {\r\n    this.player = this.addChild(this.factory.getPlayer());\r\n    this.addChild(this.factory.getBackground());\r\n    this.player.onRemove.add(() => this.gameover());\r\n    this.clock.add((delta) => this.update(delta));\r\n    this.clock.add(() => this.orchestrator.update(this));\r\n    this.clock.start();\r\n  }\r\n\r\n  public update(delta: number) {\r\n    const mouse: IPoint = this.renderer.plugins.interaction.mouse.global;\r\n    const removeSet = new Set<DisplayObject>();\r\n    const entries: Array<DynamicGraphics> = this.children.filter(\r\n      (child) => child instanceof DynamicGraphics\r\n    ) as Array<DynamicGraphics>;\r\n    for (let i = 0, length = entries.length; i < length; ++i) {\r\n      const child01 = entries[i];\r\n      if (child01.isOutOfBounds()) removeSet.add(child01);\r\n      else {\r\n        for (let j = i + 1, length = entries.length; j < length; ++j) {\r\n          const child02 = entries[j];\r\n          if (child01.hitTest(child02)) {\r\n            removeSet.add(child01);\r\n            removeSet.add(child02);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    removeSet.forEach((child) => this.removeChild(child));\r\n    this.children.forEach((child: any) => child.update(delta, mouse));\r\n    this.renderer.render(this);\r\n  }\r\n\r\n  public removeChild<T extends DisplayObject[]>(...children: T): T[0] {\r\n    children\r\n      .filter((child) => child instanceof DynamicGraphics)\r\n      .forEach((child: DynamicGraphics) => child.cleanup());\r\n    return super.removeChild(...children);\r\n  }\r\n\r\n  public gameover(): void {\r\n    this.score.freeze();\r\n    const modalRef = this.modalService.open(GameoverModal, {\r\n      size: 'sm',\r\n      centered: true,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n    });\r\n    modalRef.componentInstance.isHighest = this.score.isHighest;\r\n    modalRef.componentInstance.score = this.score.score;\r\n    modalRef.result.then(() => {\r\n      this.router.navigate(['menu']);\r\n    });\r\n  }\r\n}\r\n","<scoring-component></scoring-component>\r\n<leveling-component [level]=\"score.level + 1\"></leveling-component>\r\n<canvas #canvas></canvas>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LevelingComponent, ScoringComponent } from 'src/app/@core/components';\r\nimport { GameoverModule } from '../@core/components/gameover/gameover.module';\r\n\r\nimport { GameComponent } from './game.component';\r\nimport { GameRoutes } from './game.routes';\r\n\r\n@NgModule({\r\n  declarations: [GameComponent, ScoringComponent, LevelingComponent],\r\n  providers: [],\r\n  imports: [CommonModule, GameoverModule, GameRoutes],\r\n  bootstrap: [GameComponent],\r\n})\r\nexport class GameModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { GameComponent } from './game.component';\r\nimport { RouteParamGuard } from './route.guard';\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: ':seed',\r\n        component: GameComponent,\r\n        pathMatch: 'full',\r\n        runGuardsAndResolvers: 'always' as 'always',\r\n        canActivate: [RouteParamGuard],\r\n      },\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        runGuardsAndResolvers: 'always' as 'always',\r\n        canActivate: [RouteParamGuard],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  providers: [RouteParamGuard],\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GameRoutes {}\r\n","export * from './game.module';\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class RouteParamGuard implements CanActivate {\r\n  constructor(private readonly router: Router) {}\r\n\r\n  public canActivate(activatedRoute: ActivatedRouteSnapshot): boolean {\r\n    const seed = activatedRoute.params['seed'];\r\n    if (!seed) this.router.navigate(['']);\r\n    return !!seed;\r\n  }\r\n}\r\n","export * from './menu.module';\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent {}\r\n","<div class=\"card shadow-lg\">\r\n  <div class=\"card-body menu\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n          <img\r\n            src=\"assets/logo/Logo-3D.gif\"\r\n            class=\"rounded\"\r\n            alt=\"logo\"\r\n            width=\"160\"\r\n            height=\"120\"\r\n          />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <a class=\"btn btn-outline-info\" [routerLink]=\"['/game','8']\">GAME 1</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <a class=\"btn btn-outline-info\" [routerLink]=\"['/game','12']\">GAME 2</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <a class=\"btn btn-outline-info\" [routerLink]=\"['/game','36']\">GAME 3</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <a class=\"btn btn-outline-info\" href=\"https://www.google.com/\">EXIT</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuComponent } from './menu.component';\r\nimport { MenuRoutes } from './menu.routes';\r\n\r\n@NgModule({\r\n  declarations: [MenuComponent],\r\n  providers: [],\r\n  imports: [MenuRoutes],\r\n  bootstrap: [MenuComponent],\r\n})\r\nexport class MenuModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MenuComponent } from './menu.component';\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MenuComponent,\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MenuRoutes {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}